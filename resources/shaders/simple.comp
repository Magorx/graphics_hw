#version 430

layout( local_size_x = 512 ) in;

layout( push_constant ) uniform params {
  uint len;
} PushConstant;

layout(std430, binding = 0) buffer Source
{
    float source[];
};

layout(std430, binding = 1) buffer Result
{
    float result[];
};

void main()
{
    uint idx = gl_GlobalInvocationID.x;
    if (idx > PushConstant.len - 1) return;

    const int KERNEL_SIZE = 7;
    const int KERNEL_TO_LEFT = 3;
    const int KERNEL_TO_RIGHT = KERNEL_SIZE - KERNEL_TO_LEFT;
    
    uint idx_from = max(0, int(idx) - KERNEL_TO_LEFT);
    uint idx_to   = min(PushConstant.len - 1, idx + KERNEL_TO_RIGHT);

    float sum = 0.0;
    for (uint i = idx_from; i <= idx_to; i++) {
        sum += source[i];
    }

    // result[idx] = - sum / 7.0;
    // result[idx] = souce[idx];
    result[idx] = souce[idx] - sum / 7.0;
}